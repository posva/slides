doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title Gotta Go Fast: Vim

    link(rel='stylesheet', type='text/css', href='build/build.css')
    link(rel='icon' type='image/png' href='images/posvaicon.png')

  body

    article

      mixin section(back)
        section.full-text(style='background: url(../images/' + back + ') no-repeat center center; ')
          block
      mixin full(back)
        section.full(style='background: url(../images/' + back + ') no-repeat center center; ')
          block

      +section('sonic-running.gif')
        img.logo(src='images/vimlogo.svg')
        h1 Gotta Go Fast
        div.bottom
          a.pull-right.icon-link(href='https://github.com/posva')
            img.icon(src='images/githubicon.svg')
            span posva

      section
        .notes
          p Je suis sur que tout le monde a entendu parler de vim.
          | C'est normal, ça existe depuis 40 ans !
        h2 Vim ?
        h3 Ça me dit quelquechose

      +section('timetravel.gif')
        h1 1976

      section
        h2 Dans la même année
        .row
          .seven.columns
            img.u-max-full-width(src='images/apple1.png')
          .five.colums
            h3.bullet Apple 1
            ul.text-right
              li Assemblé à la main
              li CPU à 1 Mhz
              li 4 Kb de mémoire
              li 40x24 characters

      +section('vi-screen.png')
        h1 Vi
        h2 Mode visuel pour Ex

      +section('vim-screen.png')
        h1 Vim (1991)
        h2.bullet Clone de Vi
        h2.bullet Ameiloré

      section.iframe
        .notes
          p Bien qu'il soit paru il y a plus de 20 ans il continue à être utilisé
          | Cela est du à l'énorme gain que L'utilisation de Vim aporte à un dev
        h2 Trends
        script(type='text/javascript'
          src='//www.google.com/trends/embed.js?hl=en-US&q=Vim,+Sublime+Text,+Emacs&date=1/2004+133m&cmpt=q&tz&tz&content=1&cid=TIMESERIES_GRAPH_0&export=5&w=800&h=430')

      section
        .notes
          p Il ne faut pas voir vim comme un editeur de texte mais plutôt comme
          | une façon d'éditer du texte. Une façon d'éditer le texte qui change
          | la vie à tout développeur. Je n'ai jamais connu un seul qui regrette
          | d'avoir apris vim et qui ne s'en serve pas aujourd'hui
        h2.bullet Pourquoi apprendre Vim
        ul
          li Taper plus vite
          li Taper moins
          li Répéter facilement
          li Programmer l'édition
          li C'est amusant !

      section
        .notes
          p Au lieu de vouloir tout apprendre d'un coup il faut aller par bouts.
          | Apprendre d'abord à s'en servir comme nimporte quel autre éditeur.
        h2 3 étapes
        ul
          li Survivre dans Vim
          li Apprendre à s'en servir
          li Super-pouvoirs

      +full('survive.gif')

      section
        .notes
          p Vim est par défaut en mode normal. Ce mode permet de faire des commandes
          | et bien plus de choses qu'on verra par la suite. Pour écrire du texte comme
          | dans n'importe quel autre éditeur il faut entrer dans le mode insertion
        h1 Les Modes
        ul.bullet
          li Normal
          li Insertion
          li Visual

      section
        h2 L'insertion
        .row
          .ten.columns.offset-by-one.bullet
            .inline-pre
              pre i
            img.full(src='images/vim-tut-1.gif')

      section
        h2 L'insertion
        .row
          .ten.columns.offset-by-one.bullet
            .inline-pre
              pre a
            img.full(src='images/vim-tut-1-2.gif')

      section
        h2 Enregistrer
        .row
          .ten.columns.offset-by-one.bullet
            .inline-pre
              pre :w
            img.full(src='images/vim-tut-2.gif')

      section
        h2 Couper / Coller
        .row
          .ten.columns.offset-by-one.bullet
            .inline-pre
              pre dd
              span /
              pre p
            img.full(src='images/vim-tut-3.gif')

      section
        h2 Quitter
        .row
          .ten.columns.offset-by-one.bullet
            .inline-pre
              pre :q
              span /
              pre :q!
            img.full(src='images/vim-tut-5.gif')

      section
        h2 Undo / Redo
        .row
          .ten.columns.offset-by-one.bullet
            .inline-pre
              pre u
              span /
              pre ^R
            img.full(src='images/vim-tut-4.gif')

      section
        h2 Undo / Redo
        .row
          .ten.columns.offset-by-one.bullet
            .inline-pre
              pre u
              span /
              pre ^R
            img.full(src='images/vim-tut-4-2.gif')
      section
        h2 La souris
        .row
          .ten.columns.offset-by-one.bullet
            .inline-pre
              pre :set mouse=a
            img.full(src='images/vim-tut-6.gif')

      +full('start-typing.gif')

      +full('vim-base.png')
        .notes
          p Tu ouvre vim et çaç fait un peu peur. Pas du tout envie de coder sur ça

      section
        .notes
          p Petit détail de vim. Il faut le configurer alors que n'a pas ouvert !
        h2.bullet Prendre une config toute faite !
        ul
          li
            a(href='http://vim.spf13.com') spf13
          li
            a(href='https://github.com/joom/vim-starter') joom/vim-starter
          li
            a(href='https://github.com/posva/gotta-go-fast-vim') Gotta go fast

      section
        h2.bullet Ne pas oublier de
        ul
          li Laisser les flèches activées (pour le moment) !
          li Activer la souris → <pre>:set mouse=a</pre>


      +full('vim-with-config.png')
        .notes
          p On a un éditeur dont on ne sais pas se servir encore mais dans lequel on
          | peut travailler sans perdre beaucoup de productivité. Mais ce n'est bien
          | sur pas suffisant !

      +full('typing1.gif')
        h2 Démo

      +full('comfortable.gif')
        h1 Apprendre à s'en servir

      section
        .notes
          p Tout movement réalisé en mode Normal en vim est appelé une motion. Presque
          | toutes le commandes sont utilisées avec des motions. Les motiosn bougent le curseur
          | et permettent de se déplacer de façon plus rapide. En effet on utilise le clavier au
          | lieu de la souris et on gagne du temps. Il existe plein de motions permettant de
          | se déplacer là où on veut dans un mot, dans une ligne ou dans un fichier.
        h1 Les Motions

      section
        h2 Bouger sur une ligne
        ul
          li <pre>0</pre>/<pre>$</pre> → début / fin de ligne(+\n)
          li <pre>^</pre>/<pre>g_</pre> → début / fin (non-blank) de ligne
        p.bullet Utile pour se déplacer
        p.notes mais généralement on se déplace pour écrire cad

      section
        h2.bullet Les variantes de <pre>i</pre>
        .notes
          p Au debut on passe plus de temps dans le mode insertion mais une fois qu'on prend
          | l'habiutude on passe plus de temps en mode normal car c'est plus rapide de ce déplacer
          | Il faut donc être rapide pour insérer là où on veut
          | i insert là ou on se trouve mais on veux souvent insérer juste après
        ul
          li <pre>I</pre> → <pre>^i</pre>
          li <pre>a</pre> → append <pre>&lt;Right&gt;i</pre>
          li <pre>A</pre> → <pre>$a</pre>
          li <pre>o</pre>/<pre>O</pre> → Nouvelle ligne + mode insertion

      section
        .notes
          p Vous allez penser que c'est la mPême chose que d'utiliser Ctrl ou alt (selon l'os)
          | mais le fait de pouvoir faire le tout en une seule commande change tout
        h2 Bouger entre mots
        ul
          li words → <pre>w</pre>, <pre>b</pre>, <pre>e</pre>
          li WORDS → <pre>W</pre>, <pre>B</pre>, <pre>E</pre>

        img.bullet(src='images/word-move.png' width='400px')

        .notes
          p On peut considerer <pre>foo-bar</pre> comme un mot
          | C'est utile en web

      section
        h2.bullet Les délétions
        h3 Délétion = copier
        ul
          li <pre>d</pre>+motion → couper
          li <pre>x</pre> → couper le caractère sous curseur
          li <pre>c</pre>+motion → couper et éditer (change)

      section
        .notes
          p Pour avoir un comportement plus consistent on peut remaper Y pour copier
          | jusqu'a la fin de la ligne
        h2.bullet Les copies
        ul
          li <pre>y</pre>+motion → copier
          li <pre>yy</pre>/<pre>Y</pre> → copier la ligne

      section
        h2 Coller
        ul
          li <pre>p</pre> → coller après le curseur
          li <pre>P</pre> → coller avant le curseur

      section
        h2.bullet Mode Visuel
        ul
          li <pre>v</pre> → Visuel
          li <pre>V</pre> → Visuel Line
          li <pre>Ctrl+v</pre> → Visuel block
          li compatible avec les motions

      section
        h2.bullet Les splits
        ul
          li <pre>:vs</pre> → Vertical Split
          li <pre>:sp</pre> → Hortizontal Split
          li <pre>Ctrl+ww</pre> → Changer de split
          li <pre>Ctrl+w</pre>+<pre>[hjkl]</pre> → Choix du split

      +full('typing2.gif')
        h2 Démo

      +section('vegeta.gif')
        h1 Super-pouvoirs
        h2
          ul.bullet
            li Motions++
            li Completion
            li Plugins
            li Macros

      section
        h2 Motions dans fichier
        ul
          li <pre>gg</pre>/<pre>G</pre> → début/fin
          li <pre>/foo</pre> → cherche toutes le occurences de foo
          li <pre>n</pre>/<pre>N</pre> → va sur la suivante/précédante occurrence de foo
          li <pre>Ctrl+o</pre> → revient sur la dernière position du curseur
          li <pre>Ctrl+i</pre> → l'inverse

      section
        h2 Motions Ligne
        ul
          li <pre>fa</pre> → se place sur la lettre a
          li <pre>ta</pre> → se place juste avant la lettre a
          li <pre>3ta</pre> → se place juste avant la lettre a

      section
        h2 Motions inside/around
        ul
          li <pre>i'</pre> → inside '
          li <pre>a'</pre> → around '
          li <pre>vi'</pre> → séléction visuelle entre deux '
          li <pre>yi'</pre> → copie entre deux '
          li <pre>%</pre> → va sur la [{('" qui correspond

      section
        h2 Motion recherche
        ul
          li <pre>*</pre> → recherche le mot qui se trouve sous le curseur
          li On peut naviguer avec <pre>n</pre> et <pre>N</pre>

      section
        h2 Completion
        ul
          li <pre>Ctrl+n</pre>/<pre>Ctrl+p</pre>
          li <pre>*</pre> → recherche le mot qui se trouve sous le curseur
          li On peut naviguer avec <pre>n</pre> et <pre>N</pre>

      section
        h2 Plugins
        ul
          li Etendre les fonctionalités
          li Rajouter la compatibilité avec des nouevaux langages
          li Ecrits souvent en VimL

      section
        h2.bullet Must have Plugins
        ul
          li Vundle: Gestion de plugin
          li ctrlp/unite: Ouvrir des fichiers rapidement
          li surround + repeat: gérer les caractères qui entourent
          li syntastic: Erreurs de syntaxe/compilation

      section
        h2 Macros
        ul
          li <pre>qa</pre> Enregistre une macro dans a
          li <pre>@a</pre> Lance la macro enregistré dans a

      +full('typing3.gif')
        h2 Démo

      section
        h2 Pour aller plus loin
        ul
          li <pre>:set spell</pre>
          li manipuler les registres
          li
            a(href='http://www.moolenaar.net/habits.html') Seven habits of effective text editing
          li
            a(href='http://rayninfo.co.uk/vimtips.html') Best of Vim
          li
            a(href='http://yannesposito.com/Scratch/en/blog/Vim-as-IDE/') Vim as an IDE

      +section('ending.gif')
        h2 Des questions ?

    script(src='build/build.js')
