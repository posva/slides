doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title Gotta Go Fast: Vim

    link(rel='stylesheet', type='text/css', href='build/build.css')
    link(rel='icon' type='image/png' href='images/posvaicon.png')
    link(href='http://fonts.googleapis.com/css?family=Open+Sans:300,600' rel='stylesheet' type='text/css')

  body

    include ../../utils/utils.jade

    article
      +section('sonic-running.gif')
        img.logo(src='images/vimlogo.svg')
        h1 Gotta Go Fast
        div.bottom
          a.pull-right.icon-link(href='https://github.com/posva')
            img.icon(src='images/githubicon.svg')
            span posva

      section
        .notes
          p Je suis sur que tout le monde a entendu parler de vim.
          | C'est normal, ça existe depuis 40 ans !
        h2 Vim ?
        h3 Ça me dit quelquechose

      +section('timetravel.gif')
        h1 1976

      section
        h2 Dans la même année
        .row
          .seven.columns
            img.u-max-full-width(src='images/apple1.png')
          .five.colums
            h3.bullet Apple 1
            ul.text-right
              li Assemblé à la main
              li CPU à 1 Mhz
              li 4 Kb de mémoire
              li 40x24 characters

      +section('vi-screen.png')
        h1 Vi
        h2 Mode visuel pour Ex

      +section('vim-screen.png')
        h1 Vim (1991)
        h2.bullet Clone de Vi
        h2.bullet Ameiloré

      section.iframe
        .notes
          p Bien qu'il soit paru il y a plus de 20 ans il continue à être utilisé
          | Cela est du à l'énorme gain que L'utilisation de Vim aporte à un dev
        h2 Trends
        script(type='text/javascript'
          src='//www.google.com/trends/embed.js?hl=en-US&q=Vim,+Sublime+Text,+Emacs&date=1/2004+133m&cmpt=q&tz&tz&content=1&cid=TIMESERIES_GRAPH_0&export=5&w=800&h=430')

      section
        .notes
          p Il ne faut pas voir vim comme un editeur de texte mais plutôt comme
          | une façon d'éditer du texte. Une façon d'éditer le texte qui change
          | la vie à tout développeur. Je n'ai jamais connu un seul qui regrette
          | d'avoir apris vim et qui ne s'en serve pas aujourd'hui
        h2.bullet Pourquoi apprendre Vim
        ul
          li Taper plus vite
          li Taper moins
          li Répéter facilement
          li Programmer l'édition
          li C'est amusant !

      section
        .notes
          p Au lieu de vouloir tout apprendre d'un coup il faut aller par bouts.
          | Apprendre d'abord à s'en servir comme nimporte quel autre éditeur.
        h2 3 étapes
        ul
          li Survivre dans Vim
          li Apprendre à s'en servir
          li Super-pouvoirs

      +full('typing1.gif')

      section
        .notes
          p Vim est par défaut en mode normal. Ce mode permet de faire des commandes
          | et bien plus de choses qu'on verra par la suite. Pour écrire du texte comme
          | dans n'importe quel autre éditeur il faut entrer dans le mode insertion
        h1 Les Modes
        ul.bullet
          li Normal
          li Insertion
          li Visuel

      section
        h2 L'insertion
        .row
          .ten.columns.offset-by-one.bullet
            .inline-pre
              pre i
            img.full(src='images/vim-tut-1.gif')

      section
        h2 L'insertion
        .row
          .ten.columns.offset-by-one.bullet
            .inline-pre
              pre a
            img.full(src='images/vim-tut-1-2.gif')

      section
        h2 Enregistrer
        .row
          .ten.columns.offset-by-one.bullet
            .inline-pre
              pre :w
            img.full(src='images/vim-tut-2.gif')

      section
        h2 Couper / Coller
        .row
          .ten.columns.offset-by-one.bullet
            .inline-pre
              pre dd
              span  /
              pre p
            img.full(src='images/vim-tut-3.gif')

      section
        h2 Quitter
        .row
          .ten.columns.offset-by-one.bullet
            .inline-pre
              pre :q
              span  /
              pre :q!
            img.full(src='images/vim-tut-5.gif')

      section
        h2 Undo / Redo
        .row
          .ten.columns.offset-by-one.bullet
            .inline-pre
              pre u
              span  /
              pre ^R
            img.full(src='images/vim-tut-4.gif')

      section
        h2 Undo / Redo
        .row
          .ten.columns.offset-by-one.bullet
            img.full(src='images/vim-tut-4-2.gif')

      section
        h2 La souris
        .row
          .ten.columns.offset-by-one.bullet
            .inline-pre
              pre :set mouse=a
            img.full(src='images/vim-tut-6.gif')

      +full('start-typing.gif')

      +full('vim-base.png')
        .notes
          p Tu ouvre vim et çaç fait un peu peur. Pas du tout envie de coder sur ça

      section
        .notes
          p Petit détail de vim. Il faut le configurer alors que n'a pas ouvert !
        h2.bullet Prendre une config toute faite !
        ul
          li
            a(href='http://vim.spf13.com') spf13
          li
            a(href='https://github.com/joom/vim-starter') joom/vim-starter
          li
            a(href='https://github.com/posva/gotta-go-fast-vim') Gotta go fast

      section
        h2.bullet Ne pas oublier de
        ul
          li Laisser les flèches activées (pour le moment) !
          li Activer la souris → <pre>:set mouse=a</pre>


      +full('vim-with-config.png')
        .notes
          p On a un éditeur dont on ne sais pas se servir encore mais dans lequel on
          | peut travailler sans perdre beaucoup de productivité. Mais ce n'est bien
          | sur pas suffisant !

      +full('typing-cat.gif')

      section
        .notes
          p Tout movement réalisé en mode Normal en vim est appelé une motion. Presque
          | toutes le commandes sont utilisées avec des motions. Les motiosn bougent le curseur
          | et permettent de se déplacer de façon plus rapide. En effet on utilise le clavier au
          | lieu de la souris et on gagne du temps. Il existe plein de motions permettant de
          | se déplacer là où on veut dans un mot, dans une ligne ou dans un fichier.
        h1 Les Motions

      section
        h2 Fichier
        .row
          .ten.columns.offset-by-one.bullet
            .inline-pre
              pre gg
              span  /
              pre G
              br
              pre :<numéro de ligne>
            img.full(src='images/vim-tut-gg.gif')

      section
        h2 Mots
        .row
          .ten.columns.offset-by-one.bullet
            .inline-pre
              pre b
              span  /
              pre w
            img.full(src='images/vim-tut-wb.gif')

      section
        h2 Mots
        .row
          .ten.columns.offset-by-one.bullet
            .inline-pre
              pre e
            img.full(src='images/vim-tut-e.gif')

      section
        h2 ← ↓ ↑ →
        .row
          .ten.columns.offset-by-one.bullet
            .inline-pre
              span Utiliser
              pre hjkl
              span autant que possible
            img.full(src='images/vim-tut-hjkl.gif')

      section
        h2 Motion + Insertion
        .row
          .ten.columns.offset-by-one.bullet
            .inline-pre
              pre A
            img.full(src='images/vim-tut-biga.gif')

      section
        h2 Motion + Insertion
        .row
          .ten.columns.offset-by-one.bullet
            .inline-pre
              pre I
            img.full(src='images/vim-tut-bigi.gif')

      section
        h2 Supprimer + Insérer
        .row
          .ten.columns.offset-by-one.bullet
            .inline-pre
              pre c
              span + motion
            img.full(src='images/vim-tut-cw.gif')

      section
        h2 Couper
        .row
          .ten.columns.offset-by-one.bullet
            .inline-pre
              pre d
              span + motion
            img.full(src='images/vim-tut-de.gif')

      section
        h2 Couper
        .row
          .ten.columns.offset-by-one.bullet
            .inline-pre
              pre d
              span  + Chiffre +
              pre d
              span  ou Chiffre +
              pre dd
            img.full(src='images/vim-tut-d2.gif')

      +full('magic.gif')

      section
        h2 Répétition
        .row
          .ten.columns.offset-by-one.bullet
            .inline-pre
              pre .
            img.full(src='images/vim-tut-dot.gif')

      +full('typing2.gif')

      +section('cheatsheet.png')
        a(href='https://www.dropbox.com/s/vnrph5ajqn0fllb/vim-cheat-sheet-en.pdf?dl=1')
          h2 Utiliser une CheatSheet

      //-section
        //-h2 Ligne
        //-.row
          //-.ten.columns.offset-by-one.bullet
            //-.inline-pre
              //-pre 0
              //-span  /
              //-pre $
              //-span  et
              //-pre ^
              //-span  /
              //-pre g_
            //-img.full(src='images/vim-tut-7.gif')

      section
        h1 Mode Visuel

      section
        h2 Visuel
        .row
          .ten.columns.offset-by-one.bullet
            .inline-pre
              pre v
            img.full(src='images/vim-tut-v.gif')

      section
        h2 Visuel par ligne
        .row
          .ten.columns.offset-by-one.bullet
            .inline-pre
              pre V
            img.full(src='images/vim-tut-bigv.gif')

      section
        h2 Couper en visuel
        .row
          .ten.columns.offset-by-one.bullet
            .inline-pre
              pre v
              span +
              pre d
            img.full(src='images/vim-tut-vd.gif')

      section
        h2 Visuel par bloc
        .row
          .ten.columns.offset-by-one.bullet
            .inline-pre
              pre ^V
            img.full(src='images/vim-tut-vbloc.gif')

      section
        h2 Motion + Insertion
        .row
          .ten.columns.offset-by-one.bullet
            .inline-pre
              pre o
              span  /
              pre O
            img.full(src='images/vim-tut-oo.gif')

      section
        h2 Inside
        .row
          .ten.columns.offset-by-one.bullet
            .inline-pre
              span Motion +
              pre i
            img.full(src='images/vim-tut-inside.gif')

      section
        h2 Around
        .row
          .ten.columns.offset-by-one.bullet
            .inline-pre
              span Motion +
              pre a
            img.full(src='images/vim-tut-around.gif')

      section
        h2 Inside / Around
        .row
          .ten.columns.offset-by-one.bullet
            img.full(src='images/vim-tut-in-demo1.gif')

      section
        h2 Inside / Around
        .row
          .ten.columns.offset-by-one.bullet
            img.full(src='images/vim-tut-in-demo2.gif')

      section
        h2 Motions++
        .row
          .ten.columns.offset-by-one.bullet
            .inline-pre
              pre f
              span + un caractère
            img.full(src='images/vim-tut-f.gif')

      section
        h2 Motions++
        .row
          .ten.columns.offset-by-one.bullet
            .inline-pre
              pre t
              span + un caractère
            img.full(src='images/vim-tut-t.gif')

      section
        h2 Motions++
        .row
          .ten.columns.offset-by-one.bullet
            .inline-pre
              pre F
              span  /
              pre T
            img.full(src='images/vim-tut-bigf.gif')

      section
        h2 Recherches
        .row
          .ten.columns.offset-by-one.bullet
            .inline-pre
              pre /
              span  +
              pre n
              span et
              pre N
            img.full(src='images/vim-tut-slash.gif')

      section
        h2 Recherches
        .row
          .ten.columns.offset-by-one.bullet
            .inline-pre
              pre *
              span  +
              pre n
              span et
              pre N
            img.full(src='images/vim-tut-star.gif')

      +section('vim-splits.png')
        h2.bullet Les splits
        ul
          li <pre>:vs</pre> → Vertical Split
          li <pre>:sp</pre> → Hortizontal Split
          li <pre>^Ww</pre> → Changer de split
          li <pre>^W</pre>+<pre>[hjkl]</pre> → Choix du split

      +section('typing-extra.gif')
        h1 Super-pouvoirs
        h2
          ul.bullet
            li Complétion
            li Plugins
            li Macros
            li Démo

      section
        h2 Completion
        .row
          .ten.columns.offset-by-one.bullet
            .inline-pre
              pre ^N
              span  /
              pre ^P
            img.full(src='images/vim-tut-pn.gif')

      section
        h2 Plugins
        ul
          li Etendre les fonctionalités
          li Rajouter la compatibilité avec des nouevaux langages
          li Ecrits souvent en VimL

      section
        h2.bullet Must have Plugins
        ul
          li
            a(href='https://github.com/gmarik/Vundle.vim') Vundle
            span : Gestion de plugin
          li
            a(href='https://github.com/kien/ctrlp.vim') ctrlp
            span  /
            a(href='https://github.com/Shougo/unite.vim') unite
            span : Ouvrir des fichiers rapidement
          li
            a(href='https://github.com/tpope/vim-surround') surround
            span  +
            a(href='https://github.com/tpope/vim-repeat') repeat
            span : gérer les caractères qui entourent
          li
            a(href='https://github.com/scrooloose/syntastic') Syntastic
            span : Erreurs de syntaxe/compilation

      section
        h2 Macros
        ul
          li <pre>qa</pre> Enregistre une macro dans a
          li <pre>@a</pre> Lance la macro enregistré dans a

      +full('typing3.gif')
        h2 Démo

      section
        h2 Pour aller plus loin
        ul
          li
            pre :set spell
            span  +
            pre :set spelllang=fr
          li
            a(href='http://usevim.com/2012/04/13/registers/') Manipuler les registres
          li
            a(href='http://www.moolenaar.net/habits.html') Seven habits of effective text editing
          li
            a(href='http://rayninfo.co.uk/vimtips.html') Best of Vim
          li
            a(href='http://yannesposito.com/Scratch/en/blog/Vim-as-IDE/') Vim as an IDE

      +full('end.gif')
        h2 Happy Typing!

    script(src='build/build.js')
