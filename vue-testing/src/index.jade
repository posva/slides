doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title Slides

    link(rel='stylesheet', type='text/css', href='build/build.css')
    link(rel='icon' type='image/png' href='../common/posvaicon.png')
    link(href='http://fonts.googleapis.com/css?family=Open+Sans:300,600' rel='stylesheet' type='text/css')
    link(href='http://fonts.googleapis.com/css?family=Source+Sans+Pro:400,600|Source+Code+Pro|Dosis:300,500' rel='stylesheet' type='text/css')
  body

    include ../../utils/utils.jade

    article
      section
        h1.thin.no-padding
          img.block.center(src='images/vue-logo.png')
          span Testing in Vue.js
        h2 Unit and Functional

      +full('fingertips.gif')
        p Everything at your fingertips

      section
        img(src='images/ng-test-stack.png')
        .notes.
          ng a karma, jasmine, protractor

      +full('ng-test-search.png')
        h4.backhighlight 1.5M results

      section
        img(src='images/react-test-stack.png')
        .notes.
          ng a karma, jasmine, protractor

      +full('react-test-search.png')
        h4.backhighlight 400k results

      +full('excited.gif')
        p And Vue.js üîé

      +full('vue-test-search.png')
        h4.backhighlight 16k results
        .notes.
          or test important. why
          donc pas se d√©sanimer

      +full('homer-cry.gif')

      section.blur-bullets
        p.bullet
          code npm i -g vue-cli
        p.bullet
          code vue init webpack my-project
        p.bullet
          code npm i
        p.bullet ‚òïÔ∏è
        p.bullet
          code npm t

      section
        div
          img.fill(src='images/karma-output.png')

      +full('travolta-searching.gif')
        h4.backhighlight Code Coverage?

      section
        img(src='images/vue-format.png')
        .notes.
          vue format = barrier
          main issue when building stuff around
          happen the same on react

      +full('dog-crash.gif')
        .notes.
          Connait pas forcemment webpack
          mais tu veux rajouter des choses

      section.blur-bullets.overlap-700
        img.bullet.under(src='images/vue-transform-webpack.png')
        img.bullet.over(src='images/vue-transform-webpack-js.png')

      section
        h1 Vue.js Testing stack

      section
        img(src='images/vue-test-stack.png')

      section(data-bespoke-backdrop='emphatic')
        h2.bullet Compile Vue files before testing
        img.bullet(src='images/webpack-logo.png')
        .notes.
          Une des choses qui rend les tests compliques
          il faut compiler les fichier vue

      section
        h2 Test directory üìÇ
        pre
          code.language-text.
            test
            ‚îî‚îÄ‚îÄ unit
                ‚îú‚îÄ‚îÄ Hello.spec.js
                ‚îú‚îÄ‚îÄ hello-service.spec.js
                ‚îî‚îÄ‚îÄ index.js
        .notes.
          index = entry point
          spec = test
          utils = utils functions

      section
        h2 Component as a module
        pre
          code.thin.language-javascript.
            import Hello from 'src/components/Hello'

            describe('Hello.vue', () => {
              let vm, el
              beforeEach(() => {
                vm = instantiateComponent(Hello)
                el = $j(vm.$el)
              })
            })

      section
        h2 Component initialization
        pre
          code.language-javascript.
            it('initializes name', () => {
              expect(vm.name).toBe('World')
            })

      section
        h2 Component data
        pre
          code.language-javascript.
            it('displays the name', (done) => {
              vm.name = 'Vuers'
              expect(el).toHaveText('Hello World!')
              nextTick(vm).then(() =>
                expect(el).toHaveText('Hello Vuers!')
                done()
              })

      section
        h2.bullet I'm missing ü§î
        ul
          li
            code instantiateComponent
          li
            code
              a(href='https://github.com/bessdsv/karma-jasmine-jquery', target='_blank') karma-jasmine-jquery
            span.bullet
              span  ‚ú® (
              code toHaveText
              span ,&nbsp;
              code toHaveCss
              span , ...
              span )
          li
            code nextTick()
            span  ‚Üí Promise

      section
        h2
          code.line-through instantiateComponent
          code  beforeEach
        pre
          code.language-javascript.
            let app = new Vue({
              template: '&lt;div&gt;&lt;hello :name=&quot;name&quot;&gt;&lt;/hello&gt;&lt;/div&gt;',
              components: { Hello }
            }).$mount()
            app.$nextTick(() => {
              vm = app.$children[0]
              el = $j(vm.$el)
              done()
            })
        .notes.
          plutot fait a chaque it
          peut varier
          regrouper dans des describe

      section.blur-bullets
        h2 jQuery
        ul
          li
            code npm i -D karma-jasmine-jquery
          li
            span üìù karma.conf.js ‚Üí&nbsp;
            code.language-javascript frameworks: ['jasmine-jquery', 'jasmine']
          li
            span jQuery 2.1 ‚Üí
            code $j

      section
        h2 Launch karma‚úÖ
        div
          img.fill(src='images/karma-run.png')

      +full('chill.gif')

      section
        h2 Errors‚ùå
        div
          img.fill(src='images/karma-run-error.png')

      +full('empty-smile.gif')

      section
        h2 Use a real browser
        div
          img.fill(src='images/karma-run-emphasize.png')

      section(data-bespoke-backdrop='emphatic')
        h2 Demo

      +full('vue-coverage.png')
        img(src='images/travolta-transparent.gif')
        .notes.
          faire l'autre d√©mo d'abord

      section.blur-bullets
        ul
          li
            code npm i -D isparta-loader karma-coverage
          li üìù karma.conf.js

      section
        h2 Coverage
        pre
          code.language-javascript.
            reporters: ['spec', 'coverage'],
            ...
            coverageReporter: {
              type: 'lcov',
              dir: '../coverage'
            }

      section
        h2 Vue Coverage
        pre
          code.language-javascript.
            webpackConf.vue = {
              loaders: {
                js: 'isparta'
              }
            }

      section
        h2 JS Coverage
        pre
          code.language-javascript.
            webpackConf.module.preLoaders = [
              {
                test: /\.js$/,
                loader: 'isparta',
                exclude: /(test|node_modules)/
              }
            ]

      section(data-bespoke-backdrop='emphatic')
        h2 Demo

      section
        h2 üí≠ Any questions‚ùî

    script(src='build/build.js')
