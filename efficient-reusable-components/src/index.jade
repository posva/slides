doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title Slides

    link(rel='stylesheet', type='text/css', href='build/build.css')
    link(rel='icon' type='image/png' href='../common/posvaicon.png')
    link(href='http://fonts.googleapis.com/css?family=Open+Sans:300,600' rel='stylesheet' type='text/css')
    link(href='http://fonts.googleapis.com/css?family=Source+Sans+Pro:400,600|Source+Code+Pro|Dosis:300,500' rel='stylesheet' type='text/css')
  body

    include ../../utils/utils.jade

    article
      section
        h1.thin.no-padding
          div
            img.center(src='../common/vue-logo.png')
            img.center(src='images/vue-format.png')
          span Writing efficient and reusable components

      section
        .row.flex-align-center
          .even
            img.circle(src='https://avatars0.githubusercontent.com/u/664177?v=3&s=460')
          .even.text-left
            h2 Eduardo San Martin Morote
            h2
              img(style='height: 64px' src='../common/theodo.png')
              span Dev Theodo
            h2
              a(href='https://github.com/posva')
                img.icon(src='../common/githubicon.svg')
                span posva

      section
        img(src='images/vue-format.png')
        .notes.
          souvent √©crits dans un seul fichier
          d√©couper un morceau de notre app
          r√©utiliser √† plusieurs endroits

      section
        pre
          code.language-markup.
            &lt;template&gt;
              &lt;p class="red"&gt;{{ msg }}&lt;/p&gt;
            &lt;/template&gt;


          code.language-markup.
            &lt;script&gt;

          code.language-javascript.
            export default { props: ['msg'] }

          code.language-markup.
            &lt;/script&gt;


          code.language-markup.
            &lt;style scoped&gt;

          code.language-css.
            .red { color: red; }

          code.language-markup.
            &lt;/style&gt;
        .notes.
          donc seul fichier avec tout √ßa
          template pour html
          script pour js
          style pour css (optionel)

      section
        img(src='images/components.png')
        .notes.
          ces composants sont ensuite des morceaux de l'appli
          division hierarchique
          r√©utilisation. Montrer sur Sch√©ma

      +full('twins-dogs.gif')
        h1.shadow Reusable
        .notes.
          meme fonctionnement
          qui s'adapte

      section.big
        h2 Reusable
        ul
          li Replicable üëê
          li Agnostic ü§ñ
          li Configurableüîß
        .notes.
          certaines vont ensemble Cnf + Adap

      section.big
        h2 Replicable
        ul
          li Within a project:
            span.bullet.hide-bullet  ¬Ω üëê
            span.bullet  üôÇ
          li Anywhere: üòâ
        .notes.
          relatif au scope du component
          replicable dans un projet -> reutilisable au sein
          d'un meme projet
          -> moyen reusable
          √ßa veut pas dire que ce n'est pas bien
          c'est peut √™tre pragmatique de le faire

      section.big
        h2 Async data ‚è≥
        ul.bullet
          li
            code activate
            |  hook
          li Manual in&nbsp;
            code ready
            |  hook

      section
        h2 Async data ‚ùå
        pre
          code.language-markup.
            &lt;async-comp&gt;&lt;/async-comp&gt;


          code.language-javascript.
            activate (done) {
              this.$http.get('/data').then(response => {
                // ...
                done()
              }, errorHandler)
            }
        .notes.
          ok dans 1 projet
          mais peut pas changer d'ou viennent les donn√©es

      section
        h2 Async data ‚úÖ
        pre
          code.language-markup.
            &lt;async-comp :promise="dataPromise()"&gt;&lt;/async-comp&gt;


          code.language-javascript.
            methods: {
              dataPromise () {
                return new Promise((resolve, reject) => {
                  // ...
                })
              }
            }

      section
        h2 Async data ‚úÖ
        pre
          code.language-javascript.
            props: {
              promise: Promise
            },
            activate (done) {
              this.promise.then(done)
            }

      section.big
        h2 Parent communication üì§
        ul.bullet
          li
            code sync
            |  modifier
          li
            code v-model
            |  in 2.0

      section
        h2 Parent communication ‚ùå
        pre
          code.language-markup.
            &lt;modal-box :close="messageClose" &gt;
            &lt;/modal-box&gt;


          code.language-javascript.
            methods: {
              messageClose (response) {
                if (response) this.continue()
                else this.abort()
              }
            }
        .notes.
          a ne pas faire
          methode execut√© par le fils TODO analogie marrante a trouver

      section
        h2 Parent communication ‚úÖ
        pre
          code.language-markup.
            &lt;modal-box @close="messageClose" &gt;
            &lt;/modal-box&gt;


          code.language-javascript.
            // modal-box
            this.$emit('close', info)
        .notes.
          envoi un event
          fais ses modif a lui
          event peut etre ignor√©

      section.big
        h2 Commanding a Component üì•
        ul.bullet
          li
            code props
          li.blur-bullet.strike-bullet
            code $broadcast
          li
            code $refs
        .notes.
          declancher actions
          ex: l'affichage d'une modale

      section.blur-bullets
        h2 Commanding a Component ‚ùå
        span.bullet
        pre
          code.language-javascript.bullet.
            props: {
              show: Boolean
            }

          code.language-javascript.bullet.
            watch: {
              show () {
                // ...
              }
            }

      section
        h2 Commanding a Component ‚úÖ
        span.bullet
        pre
          code.language-javascript.bullet.
            // modal-box
            methods: {
              show () {
                // ...
              }
            }

          code.language-markup.bullet.
            &lt;modal-box v-ref:modal&gt;&lt;/modal-box&gt;

          code.language-javascript.bullet.
            // Parent
            this.$refs.modal.show()

      +full('efficient.gif')
        h1.shadow Efficient

      section.big
        h2 Efficient ‚ö°Ô∏è
        ul
          li Fast to configure
          li Fast to adapt

      section
        h2.bullet Using&nbsp;
          code slots
        pre.bullet
          code.language-markup.
            &lt;modal-box&gt;
              &lt;p&gt;Text&lt;/p&gt;
            &lt;/modal-box&gt;

        .notes.
          transclure du contenu du parent au fils
          connu en ng
          expliquer pour ceux qui connaissent pas
          essentiel pour les components

      section
        h2
          code slots
        pre
          code.language-markup.
            &lt!-- Modal Box template --&gt
            &lt;div class="modal"&gt;
              &lt;slot&gt;&lt;/slot&gt;
              &lt;button @click="close"&gt;Close&lt;/button&gt;
            &lt;/div&gt;

      section
        h2 Default&nbsp;
          code slots
        pre
          code.language-markup.
            &lt!-- Modal Box template --&gt
            &lt;div class="modal"&gt;
              &lt;div class="modal__text"&gt;
                &lt;slot&gt;
                  Text
                &lt;/slot&gt;
              &lt;/div&gt;
              &lt;button @click="close"&gt;Close&lt;/button&gt;
            &lt;/div&gt;

      section
        h2 Using multiple&nbsp;
          code slots
          |  aka named&nbsp;
          code slots
        pre
          code.language-markup.bullet.hide-bullet.
            &lt;modal-box&gt;
              &lt;h2&gt;Title&lt;/&gt;
              &lt;p&gt;Text&lt;/p&gt;
            &lt;/modal-box&gt;
          code.language-markup.bullet.hide-bullet.
            &lt;modal-box&gt;
              &lt;h2 slot="title"&gt;Title&lt;/&gt;
              &lt;p slot="text"&gt;Text&lt;/p&gt;
            &lt;/modal-box&gt;

      section.more-space
        h2 Default&nbsp;
          code slots
        pre
          code.language-markup.
            &lt!-- Modal Box template --&gt
            &lt;div class="modal"&gt;
              &lt;div class="modal__title"&gt;
                &lt;slot name="title"&gt;
                  Title
                &lt;/slot&gt;
              &lt;/div&gt;
              &lt;div class="modal__text"&gt;
                &lt;slot name="text"&gt;
                  Text
                &lt;/slot&gt;
              &lt;/div&gt;
              &lt;button @click="close"&gt;Close&lt;/button&gt;
            &lt;/div&gt;

      section
        h2 Improving&nbsp;
          code slots
          |  with&nbsp;
          code props
        pre
          code.language-markup.bullet.hide-bullet.
            &lt!-- Modal Box template --&gt
            &lt;slot name="title"&gt;
              Title
            &lt;/slot&gt;
          code.language-markup.bullet.hide-bullet.
            &lt!-- Modal Box template --&gt
            &lt;slot name="title"&gt;
              {{ title }}
            &lt;/slot&gt;

      section
        h2 Improving&nbsp;
          code slots
          |  with&nbsp;
          code props
        pre
          code.language-markup.bullet.
            &lt;modal-box title="Title"&gt;
            &lt;/modal-box&gt;

      section
        h2
          code props
          |  for state
        pre
          code.language-markup.bullet.
            &lt;contact-card :contact="contact"&gt;
            &lt;/contact-card&gt;
        .notes.
          ex mdl-card
          on en refait une en redefinisant les slots
          reutilise en passant des props

      section
        h2 Computed vs Filters ‚ùå
        pre
          code.language-markup.bullet.hide-bullet.
            &lt;li v-for="user in users | sortBy 'name'"&gt;
              {{ user | json }}
            &lt;/li&gt;

      section
        h2 Computed vs Filters ‚úÖ
        pre
          code.language-markup.bullet.
            &lt;li v-for="user in filteredArray"&gt;
              {{ user | json }}
            &lt;/li&gt;


          code.language-javascript.bullet.
            computed: {
              filteredArray () {
                return _.sortBy(this.users, 'name')
              }
            }

      section
        h2 üí≠ Any questions‚ùî

    script(src='build/build.js')
